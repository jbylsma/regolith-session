#!/bin/bash
# This is a helper script to perform common tasks with regolith looks.

set -Eeu -o pipefail

# Load common functions
source /usr/lib/regolith/regolith-session-common.sh

if [ "$#" -lt 1 ]; then
    echo "Usage: regolith-look <command>"
    echo "Actions: "
    echo "    refresh - Update the current session look based on Xresources values"
    echo "    list - Display currently installed looks in the /etc/regolith/styles directory"
    echo "    stage - Copy Xresource and i3 config files in the user directory"
    echo "    set <look> - Write a global override file in the user dir to specify the desired look"
    exit 1
fi

COMMAND=$1

refresh() {
    load_standard_xres
    load_regolith_xres
    # Change the quotes in workspace names from double to to single.
    # Due to a limitation of the preprocessor they have double quotes.
    # The i3-wm workspace command fails with double quotes in the name
    xres_i3_cleanup

    # Set the theme from Xresources values.
    gsettings set org.gnome.desktop.interface gtk-theme "$(xrescat gnome.gtk.theme Adwaita)"
    gsettings set org.gnome.desktop.wm.preferences theme "$(xrescat gnome.wm.theme Adwaita)"
    gsettings set org.gnome.desktop.interface icon-theme "$(xrescat gnome.icon.theme Adwaita)"

    # Set the wallpaper
    WALLPAPER_FILE=$(xrescat gnome.wallpaper)
    if [[ -n $WALLPAPER_FILE ]]; then
        gsettings set org.gnome.desktop.background picture-uri "file://$(eval echo $WALLPAPER_FILE)"
    fi

    # Configure the gnome-terminal profile
    if hash gnome-terminal 2>/dev/null; then # Check if gnome-terminal is on the path
        UPDATE_TERM_FLAG=$(xrescat gnome.terminal.update true)
        if [[ "$UPDATE_TERM_FLAG" == "true" && -f "/usr/bin/create-regolith-term-profile" ]] ; then
            /usr/bin/create-regolith-term-profile
        fi
    fi

    # restart i3-wm after merging Xresources
    i3-msg -q restart
}

# Upsert Xresource key regolith.look.path and refresh session
set_look() {
    if [ ! -d "$LOOK_PATH" ]; then
        echo "Aborting, invalid look directory: $LOOK_PATH"
        exit 1
    fi

    # Unset any existing values
    if [ -f "$BASELINE_XRESOURCE_FILE" ]; then
        # disable existing declaration
        sed -i 's/^regolith.look.path/\!regolith.look.path/g' "$BASELINE_XRESOURCE_FILE"
    fi

    # add new declaration
    echo "regolith.look.path: $LOOK_PATH" >> "$BASELINE_XRESOURCE_FILE"

    refresh
}

if [ "$COMMAND" == "refresh" ]; then
    refresh
elif [ "$COMMAND" == "stage" ]; then
    stage
elif [ "$COMMAND" == "set" ]; then
    LOOK_NAME=$2
    if [ -z "$LOOK_NAME" ]; then
        echo "Must specify a look to set."
        exit 1
    else
        LOOK_PATH="/usr/share/regolith-look/$LOOK_NAME"
        set_look
    fi
elif [ "$COMMAND" == "list" ]; then
    find "$DEFAULT_LOOK_ROOT" -maxdepth 1 -mindepth 1 -type d -printf '%f\n' | sort
else
    echo "Unrecognized command: $COMMAND"
    exit 1
fi
